# azure-pipelines.yml
trigger: none

variables:
  System.Debug: 'true'
  FAKE_RESTAPI_PATH: '$(Build.SourcesDirectory)/FakeRestAPI'  
  PACKAGE_NAME: 'FakeRestAPI.zip'

stages:
# =========================
# 1) BUILD:
# =========================
- stage: Build
  displayName: Build (Archive FakeRestAPI)
  jobs:
  - job: Package_FakeRestAPI
    displayName: Package FakeRestAPI
    pool:
      vmImage: 'ubuntu-latest'  
    timeoutInMinutes: 30
    steps:
    - checkout: self

    - bash: |
        set -euxo pipefail
        test -d "$(FAKE_RESTAPI_PATH)" || { echo "Folder not found: $(FAKE_RESTAPI_PATH)"; exit 1; }
        echo "Found: $(FAKE_RESTAPI_PATH)"
      displayName: "Verify FakeRestAPI folder exists"

    - task: ArchiveFiles@2
      displayName: "Archive FakeRestAPI -> $(PACKAGE_NAME)"
      inputs:
        rootFolderOrFile: '$(FAKE_RESTAPI_PATH)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(PACKAGE_NAME)'
        replaceExistingArchive: true

    - task: PublishBuildArtifacts@1
      displayName: "Publish artifact (drop)"
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

# =========================
# 2) DEPLOY
# =========================
- stage: Deploy
  displayName: Deploy to Test VM (Environment)
  dependsOn: Build
  jobs:
  - deployment: CopyAndUnzipOnVM
    displayName: "Copy package to VM and unzip"
    environment: "linux-test-vm"   
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
            displayName: "Download artifact (drop)"

          - bash: |
              set -euxo pipefail
              if ! command -v unzip >/dev/null 2>&1; then
                sudo apt-get update -y
                sudo apt-get install -y unzip
              fi
            displayName: "Ensure unzip is installed"

          - bash: |
              set -euxo pipefail
              PKG_SRC="$(Pipeline.Workspace)/drop/$(PACKAGE_NAME)"
              DEST_ROOT="/home/azureuser/site"
              DEST_PKG="$DEST_ROOT/packages"
              DEST_APP="$DEST_ROOT/FakeRestAPI"

              mkdir -p "$DEST_PKG" "$DEST_APP"

              cp -f "$PKG_SRC" "$DEST_PKG/$(PACKAGE_NAME)"
              ls -la "$DEST_PKG"

              unzip -o "$DEST_PKG/$(PACKAGE_NAME)" -d "$DEST_APP"
              ls -la "$DEST_APP"
            displayName: "Copy & unzip package on VM"

          # - bash: |
          #     set -euxo pipefail
          #     cd /home/azureuser/site/FakeRestAPI
          #     nohup python3 -m http.server 8080 >/home/azureuser/site/http.log 2>&1 &
          #     echo "Started simple server on :8080"
          #   displayName: "OPTIONAL: start simple test server"
