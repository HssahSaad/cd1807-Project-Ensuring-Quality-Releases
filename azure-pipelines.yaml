pool:
  name: myAgentPool

variables:
  tfVersion: '1.2.9'
  azureServiceConnectionId: 'AzureServiceConnection'
  System.Debug: 'true'          # 1) فعل الديبق

stages:
- stage: Build
  displayName: Build
  jobs:
  - job: BuildInfrastructure
    displayName: Build Infrastructure
    steps:
    - checkout: self

    - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
      displayName: Install Terraform
      inputs:
        terraformVersion: '$(tfVersion)'

    - task: AzureCLI@2
      displayName: Terraform init + validate + apply (OIDC)
      inputs:
        azureSubscription: '$(azureServiceConnectionId)'
        scriptType: bash
        scriptLocation: inlineScript
        addSpnToEnvironment: true
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/environments/test'
        inlineScript: |
          set -euo pipefail
          set -x  # اطبع كل الأوامر

          # 2) تفعيل OIDC لمزوّد AzureRM والباكند
          export ARM_USE_OIDC=true
          export ARM_CLIENT_ID="$servicePrincipalId"
          export ARM_TENANT_ID="$tenantId"
          export ARM_SUBSCRIPTION_ID="$subscriptionId"

          echo "PWD=$(pwd)"
          echo "Listing files:"
          ls -la

          # تأكيد تسجيل الدخول
          az account show --query '{sub:id, tenant:tenantId, user:user}' -o table

          terraform --version

          # 3) Backend مع AAD
          terraform init -input=false -no-color \
            -backend-config="resource_group_name=Azuredevops" \
            -backend-config="storage_account_name=tfstate3193425499" \
            -backend-config="container_name=tfstate" \
            -backend-config="key=test.terraform.tfstate" \
            -backend-config="use_azuread_auth=true"

          terraform validate -no-color

          terraform plan -input=false -no-color -out=tfplan

          terraform apply -input=false -no-color -auto-approve tfplan
