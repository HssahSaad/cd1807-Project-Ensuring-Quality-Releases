pool:
  name: myAgentPool

variables:
  python.version: '3.7.6'
  azureServiceConnectionId: 'AzureServiceConnection'
  projectRoot: '$(System.DefaultWorkingDirectory)'
  environmentName: 'test'

stages:
- stage: Build
  displayName: Build
  jobs:
  - job: BuildInfrastructure
    displayName: Build Infrastructure
    steps:
      - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
        displayName: Terraform installation
        inputs:
          terraformVersion: '1.2.9'

      - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV3@3
        displayName: Terraform init
        inputs:
          provider: azurerm
          command: init
          workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/environments/test'
          backendServiceArm: '$(azureServiceConnectionId)'
          backendAzureRmResourceGroupName: Azuredevops
          backendAzureRmStorageAccountName: tfstate3193425499
          backendAzureRmContainerName: tfstate
          backendAzureRmKey: test.terraform.tfstate

      - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV3@3
        displayName: Terraform validate
        inputs:
          provider: azurerm
          command: validate
          workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/environments/test'

      - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV3@3
        displayName: Terraform apply
        inputs:
          provider: azurerm
          command: apply
          workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/environments/test'
          environmentServiceNameAzureRM: '$(azureServiceConnectionId)'
          commandOptions: '-auto-approve'
