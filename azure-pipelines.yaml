# azure-pipelines.yml
trigger: none

pool:
  name: myAgentPool        # self-hosted agent pool

variables:
  System.Debug: 'true'
  azureServiceConnectionId: 'AzureServiceConnection'  # Service Connection (ARM + OIDC)
  TF_VERSION: '1.8.5'

  # Backend settings
  TF_BACKEND_RG: 'Azuredevops'
  TF_BACKEND_SA: 'tfstate3193425499'
  TF_BACKEND_CONTAINER: 'tfstate'
  TF_BACKEND_KEY: 'test.terraform.tfstate'

stages:
- stage: Build
  displayName: Build
  jobs:
  - job: BuildInfrastructure
    displayName: Build Infrastructure
    steps:
    - checkout: self

    - task: AzureCLI@2
      displayName: Install Terraform + init/plan/apply (AAD/OIDC)
      inputs:
        azureSubscription: '$(azureServiceConnectionId)'
        scriptType: bash
        scriptLocation: inlineScript
        addSpnToEnvironment: true
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/environments/test'
        inlineScript: |
          set -eo pipefail
          set -x

          echo "PWD=$(pwd)"
          ls -la
          if [ ! -f "./main.tf" ]; then
            echo "ERROR: main.tf not found in $(pwd)"
            exit 2
          fi

          # 1) Install Terraform locally (no sudo/unzip needed)
          mkdir -p "$HOME/bin"
          export PATH="$HOME/bin:$PATH"
          if ! command -v terraform >/dev/null 2>&1; then
            echo "Installing Terraform ${TF_VERSION} ..."
            TF_ZIP="/tmp/terraform_${TF_VERSION}_linux_amd64.zip"
            cu
