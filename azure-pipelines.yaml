pool:
  name: myAgentPool

variables:
  tfVersion: '1.2.9'
  azureServiceConnectionId: 'AzureServiceConnection'
  projectRoot: $(System.DefaultWorkingDirectory)
  environmentName: 'test'
  tfWorkDir: '$(System.DefaultWorkingDirectory)/terraform/environments/test'

stages:
- stage: Build
  displayName: Build
  jobs:
  - job: BuildInfrastructure
    displayName: Build Infrastructure
    steps:

    - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
      displayName: Terraform installation
      inputs:
        terraformVersion: '$(tfVersion)'

    # تسجيل الدخول عبر خدمة Azure والتمرير كـ OIDC للـ provider/back-end
    - task: AzureCLI@2
      displayName: Terraform init + validate + apply (OIDC)
      inputs:
        azureSubscription: '$(azureServiceConnectionId)'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        workingDirectory: '$(tfWorkDir)'
        addSpnToEnvironment: true
        inlineScript: |
          set -e

          terraform --version

          # تفعيل OIDC للـ azurerm (backend + provider)
          export ARM_USE_OIDC=true
          export ARM_CLIENT_ID="$servicePrincipalId"
          export ARM_TENANT_ID="$tenantId"
          export ARM_SUBSCRIPTION_ID="$subscriptionId"

          echo "Init backend..."
          terraform init -reconfigure \
            -backend-config="resource_group_name=Azuredevops" \
            -backend-config="storage_account_name=tfstate3193425499" \
            -backend-config="container_name=tfstate" \
            -backend-config="key=test.terraform.tfstate" \
            -backend-config="use_azuread_auth=true"

          echo "Validate..."
          terraform validate

          echo "Plan..."
          terraform plan -out=tfplan

          echo "Apply..."
          terraform apply -auto-approve tfplan
